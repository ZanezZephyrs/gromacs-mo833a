name: CMake

on:
  push:
    branches: [ git_actions ]

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: update
      run: sudo apt-get update

    - name: install g++
      run: sudo apt-get install cmake -y

    - name: install g++
      run: sudo apt-get install g++ -y

    # - name: Configure CMake
    #   # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
    #   # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
    #   run: cmake -DCMAKE_BUILD_TYPE=RELEASE

    - name: Build
      run: mkdir build && cd build && sudo cmake .. -DGMX_BUILD_OWN_FFTW=ON -DREGRESSIONTEST_DOWNLOAD=ON

    - name: make
      working-directory: build/
      #go to build folder and runs make
      run: make
      